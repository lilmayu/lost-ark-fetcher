plugins {
    id 'java'
    id 'java-library'
    id 'signing'
    id 'maven-publish'
    id "com.github.johnrengelman.shadow" version "7.1.2"
    id "io.github.gradle-nexus.publish-plugin" version "1.1.0"
}

group 'dev.mayuna'
version '0.2.3'

repositories {
    flatDir { dirs "./libs/" }
    mavenCentral()
    maven { url "https://s01.oss.sonatype.org/content/repositories/releases" }
}

dependencies {
    // Simple Java API Wrapper
    compileOnly 'dev.mayuna:simple-java-api-wrapper:1.0.2'

    // Jsoup
    compileOnly 'org.jsoup:jsoup:1.14.3'

    // GSON
    compileOnly 'com.google.code.gson:gson:2.9.0'
    testImplementation 'com.google.code.gson:gson:2.9.0'

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    // JUnit
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
}

// == Quick tasks == //

task publishCloseAndRelease() {
    dependsOn 'publishToSonatype'
    dependsOn 'closeAndReleaseSonatypeStagingRepository'
}

shadowJar {

}

test {
    useJUnit();
}

// == Maven publishing == //

publishing {

    publications {
        shadow(MavenPublication) {
            groupId = 'dev.mayuna'
            artifactId = 'lost-ark-fetcher'
            version = getVersion()
            from components.java

            pom {
                name = 'Lost Ark Fetcher'
                description = 'Java library for fetching Lost Ark related things'
                url = 'https://github.com/lilmayu/lost-ark-fetcher'

                scm {
                    connection = 'scm:https://github.com/lilmayu/lost-ark-fetcher'
                    developerConnection = 'scm:git:https://github.com/lilmayu/lost-ark-fetcher.git'
                    url = 'https://github.com/lilmayu/lost-ark-fetcher'
                }

                licenses {
                    license {
                        name = 'Apache License 2.0'
                        url = 'https://www.apache.org/licenses/LICENSE-2.0'
                    }
                }

                developers {
                    developer {
                        id = 'mayuna'
                        name = 'Marek Lof'
                        email = 'uwulilmayu@gmail.com'
                    }
                }
            }
        }
    }

    publishing {
        repositories {
            maven {
                credentials {
                    username = "$ossrhUsername"
                    password = "$ossrhPassword"
                }

                url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            }
        }
    }
}

signing {
    sign publishing.publications.shadow
}

nexusPublishing {
    repositories {
        sonatype {
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
            username = "$ossrhUsername"
            password = "$ossrhPassword"
        }
    }
}

java {
    withJavadocJar()
    withSourcesJar()
}

shadowJar.dependsOn javadocJar
shadowJar.dependsOn sourcesJar
shadowJar.dependsOn jar

components.java.withVariantsFromConfiguration(configurations.shadowRuntimeElements) {
    skip()
}